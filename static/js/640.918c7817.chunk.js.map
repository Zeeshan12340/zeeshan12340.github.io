{"version":3,"file":"static/js/640.918c7817.chunk.js","mappings":"iVAOe,SAASA,IACpB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,cAERC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAcjC,OAZAC,EAAAA,EAAAA,YAAU,KACK,MAAPL,EACAM,MAAMC,GACDC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKE,GAAQP,EAAQO,KACZ,MAAPV,GACXM,MAAM,2EACDE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKE,GAAQP,EAAQO,IAC1B,GACD,CAACV,KAGAW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,KAAA,OAAKG,MAAO,CAAEC,SAAU,SAAUC,OAAQ,SAAUC,UAAW,UAAWC,WAAY,qBAAsBL,UACxGF,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CACVC,WAAY,CACRC,IAAKC,IAAA,IAAMC,EAAKC,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAJ,GAAAA,IAAA,OAAOX,EAAAA,EAAAA,KAAA,OAAAE,UAAKF,EAAAA,EAAAA,KAAA,OAAAgB,EAAAA,EAAAA,GAAA,GAASJ,KAAe,EACpDK,KAAMC,IAAgD,IAA/C,OAAEC,EAAM,UAAElB,EAAS,SAAEC,GAAoBgB,EAAPN,GAAKQ,EAAAA,EAAAA,GAAAF,EAAAG,GAC1C,MAAMC,EAAQ,iBAAiBC,KAAKtB,GAAa,IACjD,OAAQkB,GAAUG,GACdtB,EAAAA,EAAAA,KAACwB,EAAAA,GAAiBR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACb,MAAOsB,EAAAA,EAASC,SAAUJ,EAAM,GAAIK,OAAO,OAAUf,GAAK,IAAAV,SAAG0B,OAAO1B,GAAU2B,QAAQ,MAAO,QAEhH7B,EAAAA,EAAAA,KAAA,QAAAgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAMf,UAAWA,GAAeW,GAAK,IAAAV,SAChCA,IAER,GAEPA,SAEDX,OAKrB,C","sources":["components/Post.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport post1Data from '../constants/pwncollege.md';\nimport { useParams } from 'react-router-dom';\n\nexport default function Post() {\n    const { id } = useParams();\n\n    const [post, setPost] = useState('');\n\n    useEffect(() => {\n        if (id === \"1\") {\n            fetch(post1Data)\n                .then(response => response.text())\n                .then(text => setPost(text));\n        } else if (id === \"2\") {\n        fetch(\"https://raw.githubusercontent.com/Zeeshan12340/writeups/main/obscure.md\")\n            .then(response => response.text())\n            .then(text => setPost(text));\n        }\n    }, [id]);\n\n    return (\n        <div className=\"my-5\">\n            <div style={{ maxWidth: '1000px', margin: '0 auto', textAlign: 'justify', fontFamily: 'Inter, Sans-Serif' }}>\n                <ReactMarkdown\n                    components={{\n                        img: ({ ...props }) => <div><img {...props} /></div>,\n                        code: ({ inline, className, children, ...props }) => {\n                            const match = /language-(\\w+)/.exec(className || '');\n                            return !inline && match ? (\n                                <SyntaxHighlighter style={dracula} language={match[1]} PreTag=\"div\" {...props}>{String(children).replace(/\\n$/, '')}</SyntaxHighlighter>\n                            ) : (\n                                <code className={className} {...props}>\n                                    {children}\n                                </code>\n                            );\n                        }\n                    }}\n                >\n                    {post}\n                </ReactMarkdown>\n            </div>\n        </div>\n    );\n}"],"names":["Post","id","useParams","post","setPost","useState","useEffect","fetch","post1Data","then","response","text","_jsx","className","children","style","maxWidth","margin","textAlign","fontFamily","ReactMarkdown","components","img","_ref","props","Object","assign","_objectDestructuringEmpty","_objectSpread","code","_ref2","inline","_objectWithoutProperties","_excluded","match","exec","SyntaxHighlighter","dracula","language","PreTag","String","replace"],"sourceRoot":""}