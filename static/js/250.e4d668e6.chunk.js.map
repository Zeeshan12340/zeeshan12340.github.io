{"version":3,"file":"static/js/250.e4d668e6.chunk.js","mappings":"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","sources":["components/TicTacToe.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';  \nimport '../css/tictactoe.css';\nimport PropTypes from 'prop-types';\n\nfunction Square({ value, onSquareClick, highlight }) {\n  return (\n    <button\n      className=\"square\"\n      {...highlight ? { style: { backgroundColor: \"cyan\" } } : {}}\n      onClick={onSquareClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay}) {\n  function handleClick(i) {\n    if ( squares[i] ) {\n      return;\n    }\n\n    const nextSquares = squares.slice();\n    if ( xIsNext ) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"0\";\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status = \"Draw: No one won.\";\n  for (let i = 0; i < squares.length; i++) {\n      if (squares[i] == null) {\n          status = null; \n      }\n  }\n\n  if (winner) {\n    status = \"Winner: \" + squares[winner[0]];\n  } else if (!status) {\n    status = \"Next Player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const board = [];\n  for (let i = 0; i < 3; i++) {\n    const row = [];\n    for (let j = 0; j < 3; j++) {\n      const index = i * 3 + j;\n      row.push(\n        <Square\n          key={index}\n          value={squares[index]}\n          onSquareClick={() => handleClick(index)}\n          highlight={winner && winner.includes(index)}\n        />\n      );\n    }\n    board.push(\n      <div key={i} className=\"board-row\">\n        {row}\n      </div>\n    );\n  }\n\n  return (\n    <div className='board'>\n      <div className={\"status\" + (status.includes(\"Winner\") ? \" alert alert-success\" : \"\")} style={{ position: \"absolute\", top: status.includes(\"Winner\") ? 70 : 100, left: 0, right: 0, zIndex: 999 }}>\n        {status}\n      </div>\n      {board}\n    </div>\n    );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i];\n    }\n  }\n  return null;\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpto(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move === currentMove) {\n      description = 'You are at move #' + move;\n      return (<li key={move} className='move'>{description}</li>);\n    } else if (move > 0) { \n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n\n    return (\n      <li key={move} className='mt-1'>\n        <button className='border border-info rounded-pill px-2' onClick={() => jumpto(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  function newGame() {\n      setHistory([Array(9).fill(null)]);\n      setCurrentMove(0);\n  }\n\n  return (\n    <div className='game'>\n      <button className=\"btn btn-primary mb-2\" onClick={() => newGame()}>New Game</button>\n      <div className=\"break\"></div>\n      <div className='game-board'>\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay}/>\n      </div> \n      <div className='game-info'>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );  \n}\n\nSquare.propTypes = {\n  value: PropTypes.string,\n  onSquareClick: PropTypes.func,\n  highlight: PropTypes.bool\n};\n\nBoard.propTypes = {\n    xIsNext: PropTypes.bool,\n    squares: PropTypes.array,\n    onPlay: PropTypes.func\n};\n"],"names":["Square","_ref","value","onSquareClick","highlight","_jsx","_objectSpread","className","style","backgroundColor","onClick","children","Board","_ref2","xIsNext","squares","onPlay","handleClick","i","nextSquares","slice","winner","lines","length","a","b","c","calculateWinner","status","board","row","j","index","push","includes","_jsxs","position","top","left","right","zIndex","Game","history","setHistory","useState","Array","fill","currentMove","setCurrentMove","currentSquares","moves","map","move","description","nextHistory"],"sourceRoot":""}