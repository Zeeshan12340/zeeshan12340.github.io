{"version":3,"file":"static/js/10.ddeca6cd.chunk.js","mappings":"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","sources":["components/projects/PostCard.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ThemeContext } from \"styled-components\";\n// import ReactMarkdown from \"react-markdown\";\n\nconst styles = {\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n    marginBottom: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst PostCard = (props) => {\n  const theme = useContext(ThemeContext);\n\n  const { post } = props;\n\n  return (\n    <div style={{ maxWidth: 400 }}>\n      <Card\n        style={{\n          borderRadius: 10,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n          width: 600,\n          height: 70,\n          marginBottom: 50,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        {/* <Card.Img variant=\"top\" src={post?.image} style={{ height: 175 }} /> */}\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{post.title}</Card.Title>\n          {/* <Card.Text style={{ textAlign: 'left' }} as=\"div\">\n            <ReactMarkdown>{post.bodyText}</ReactMarkdown>\n          </Card.Text> */}\n        </Card.Body>\n\n        {/* {post.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {post.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={{ marginRight: 5, marginLeft: 5}}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )} */}\n      </Card>\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        href: PropTypes.string.isRequired,\n      })\n    ),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default PostCard;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["styles","cardTitleStyle","fontSize","fontWeight","marginBottom","buttonStyle","margin","props","theme","useContext","ThemeContext","post","_jsx","style","maxWidth","children","Card","borderRadius","backgroundColor","cardBackground","borderColor","cardBorderColor","width","height","text","bsSecondaryVariant","Body","Title","title","CardBody","React","_ref","ref","className","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","border","body","Object","assign","Img","Subtitle","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}