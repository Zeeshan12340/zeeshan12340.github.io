{"version":3,"file":"static/js/202.fd073c5f.chunk.js","mappings":"4hEAYA,MAAMA,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,IAETC,mBAAoB,CAClBC,WAAY,aAuGhB,QAnGA,SAAgBC,GAAQ,IAADC,EACrB,MAAM,OAAEC,GAAWF,GACZG,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,WAAS,GAgCjC,OAZAG,EAAAA,EAAAA,YAAU,KACRJ,EAAQK,GACJH,IAGJI,EAAAA,EAAAA,KAAoBC,gBACZC,EAAAA,EAAAA,GAASC,EAAO,IACrBC,MAAK,KACNP,GAAQ,EAAK,GACb,GACD,CAACD,KAGFS,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGV,IAAQW,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,QAASC,KAC7BH,EAAAA,EAAAA,KAACI,EAAAA,QAAM,CAACC,MAAOpB,IACdC,GACCc,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAAAP,UACHC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,4BAA2BR,UACxCD,EAAAA,EAAAA,MAACU,EAAAA,EAAS,CAAAT,SAAA,EArCOU,EAsCIvB,EAAKuB,OArClCT,EAAAA,EAAAA,KAAA,MAAIU,MAAOjC,EAAOI,mBAAmBkB,UACnCC,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAAAZ,SAAEU,OAqCI,QADkBzB,EAC7BE,EAAKM,cAAM,IAAAR,OAAA,EAAXA,EAAa4B,KAAKC,IACjBf,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAKc,EAAKR,QACTQ,EAAKC,MAAMF,KAAKG,IACfjB,EAAAA,EAAAA,MAAA,OAAsBY,MAAO,CAAEM,QAAS,gBAAiBjB,SAAA,EACvDC,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLV,UAAU,UACVW,QAASA,MA1C/B,SAAsBb,GACpB,MAAMc,EAAUC,KAAKC,MAAMD,KAAKE,UAAUpC,IAC1CiC,EAAQ3B,OAAOoB,KAAKW,IAClBA,EAAMT,MAAMF,KAAKG,IACXA,EAAKV,QAAUA,IACjBU,EAAKS,MAAQT,EAAKS,KACpB,GACA,IAEJrC,EAAQgC,EACV,CAiCwBM,CAAaV,EAAKV,MAAM,EACxBN,UAEFC,EAAAA,EAAAA,KAAA,OACEU,MAAOjC,EAAOC,UACdgD,IAAKX,EAAKY,KACVC,IAAKb,EAAKV,WAGdL,EAAAA,EAAAA,KAAA,KAAAD,SAAIgB,EAAKV,UAdDU,EAAKV,WAJTQ,EAAKR,SAuBhBnB,EAAKM,OAAOoB,KAAKW,IAChBvB,EAAAA,EAAAA,KAAA,OAAuBO,UAAU,mBAAkBR,SAChDwB,EAAMT,MAAMF,KACVG,GACCA,EAAKS,OACHxB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,aAAYR,UACzBD,EAAAA,EAAAA,MAAA,OAAKY,MAAO,CAAEmB,OAAQ,IAAK9B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,KAAIR,UACjBC,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAAAZ,SAAEgB,EAAKV,WAEvBL,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAAAZ,SAAEgB,EAAKe,aALQf,EAAKV,UAJpCkB,EAAMlB,iBAoBxBL,EAAAA,EAAAA,KAAC+B,EAAAA,QAAe,OApFKtB,KAwF7B,C,4ECtGA,QATA,SAAgB1B,GACd,MAAM,MAAEsB,GAAUtB,EAClB,OAAOiB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,SAAQR,SAAEM,GAClC,C","sources":["components/Skills.jsx","components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport PropTypes from \"prop-types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport skills from \"../constants/skills.json\";\nimport particlesOptions from \"../particles.json\";\nimport Particles, {initParticlesEngine} from \"@tsparticles/react\";\nimport {loadFull} from \"tsparticles\";\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 75,\n  },\n  introTextContainer: {\n    whiteSpace: \"pre-wrap\",\n  },\n};\n\nfunction Skills(props) {\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [init, setInit] = useState(false);\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown>{intro}</ReactMarkdown>\n    </h4>\n  );\n\n  function handleToggle(title) {\n    const newData = JSON.parse(JSON.stringify(data));\n    newData.skills.map((skill) => {\n      skill.items.map((item) => {\n        if (item.title === title) {\n          item.show = !item.show;\n        }\n      });\n    });\n    setData(newData);\n  }\n\n  useEffect(() => {\n    setData(skills);\n    if (init) {\n      return;\n    }\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, [init]);\n\n  return (\n    <div>\n      {init && <Particles options={particlesOptions}/>}\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div className=\"section-content-container\">\n            <Container>\n              {renderSkillsIntro(data.intro)}\n              {data.skills?.map((rows) => (\n                <div key={rows.title}>\n                  <br />\n                  <h3>{rows.title}</h3>\n                  {rows.items.map((item) => (\n                    <div key={item.title} style={{ display: \"inline-block\" }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn m-1\"\n                        onClick={() => {\n                          handleToggle(item.title);\n                        }}\n                      >\n                        <img\n                          style={styles.iconStyle}\n                          src={item.icon}\n                          alt={item.title}\n                        />\n                      </button>\n                      <p>{item.title}</p>\n                    </div>\n                  ))}\n                </div>\n              ))}\n              {data.skills.map((skill) => (\n                <div key={skill.title} className=\"skills-container\">\n                  {skill.items.map(\n                    (item) =>\n                      item.show && (\n                        <div className=\"skill-item\" key={item.title}>\n                          <div style={{ margin: 10 }}>\n                            <div className=\"h4\">\n                              <ReactMarkdown>{item.title}</ReactMarkdown>\n                            </div>\n                            <ReactMarkdown>{item.detail}</ReactMarkdown>\n                          </div>\n                        </div>\n                      )\n                  )}\n                </div>\n              ))}\n            </Container>\n          </div>\n        </Fade>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </div>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../index.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n"],"names":["styles","iconStyle","height","width","introTextContainer","whiteSpace","props","_data$skills","header","data","setData","useState","init","setInit","useEffect","skills","initParticlesEngine","async","loadFull","engine","then","_jsxs","children","_jsx","Particles","options","particlesOptions","Header","title","Fade","className","Container","intro","style","ReactMarkdown","map","rows","items","item","display","type","onClick","newData","JSON","parse","stringify","skill","show","handleToggle","src","icon","alt","margin","detail","FallbackSpinner"],"sourceRoot":""}