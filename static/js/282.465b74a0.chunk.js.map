{"version":3,"file":"static/js/282.465b74a0.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/plugin-absorbers/browser/Enums/AbsorberClickMode.js","../node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSizeLimit.js","../node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSize.js","../node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/Absorber.js","../node_modules/@tsparticles/plugin-absorbers/browser/AbsorberInstance.js","../node_modules/@tsparticles/plugin-absorbers/browser/Absorbers.js","../node_modules/@tsparticles/plugin-absorbers/browser/AbsorbersPlugin.js","../node_modules/@tsparticles/updater-destroy/browser/Options/Classes/DestroyBounds.js","../node_modules/@tsparticles/updater-destroy/browser/Enums/DestroyMode.js","../node_modules/@tsparticles/updater-destroy/browser/Options/Classes/SplitFactor.js","../node_modules/@tsparticles/updater-destroy/browser/Options/Classes/SplitRate.js","../node_modules/@tsparticles/updater-destroy/browser/Options/Classes/Split.js","../node_modules/@tsparticles/updater-destroy/browser/Options/Classes/Destroy.js","../node_modules/@tsparticles/updater-destroy/browser/Utils.js","../node_modules/@tsparticles/updater-destroy/browser/DestroyUpdater.js","../node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js","../node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js","../node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js","../node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js","../node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js","../node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js","../node_modules/@tsparticles/plugin-emitters/browser/Enums/EmitterClickMode.js","../node_modules/@tsparticles/plugin-emitters/browser/EmitterInstance.js","../node_modules/@tsparticles/plugin-emitters/browser/Emitters.js","../node_modules/@tsparticles/plugin-emitters/browser/EmittersPlugin.js","../node_modules/@tsparticles/plugin-emitters/browser/ShapeManager.js","../node_modules/@tsparticles/plugin-emitters/browser/EmitterShapeBase.js","../node_modules/@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShape.js","../node_modules/@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShapeGenerator.js","../node_modules/@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShape.js","../node_modules/@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShapeGenerator.js","../node_modules/@tsparticles/interaction-external-trail/browser/Options/Classes/Trail.js","../node_modules/@tsparticles/interaction-external-trail/browser/TrailMaker.js","../node_modules/@tsparticles/updater-roll/browser/RollMode.js","../node_modules/@tsparticles/updater-roll/browser/Utils.js","../node_modules/@tsparticles/updater-roll/browser/Options/Classes/RollLight.js","../node_modules/@tsparticles/updater-roll/browser/Options/Classes/Roll.js","../node_modules/@tsparticles/updater-roll/browser/RollUpdater.js","../node_modules/@tsparticles/move-base/browser/Utils.js","../node_modules/@tsparticles/move-base/browser/BaseMover.js","../node_modules/@tsparticles/shape-circle/browser/Utils.js","../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","../node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../node_modules/@tsparticles/basic/browser/index.js","../node_modules/@tsparticles/plugin-hex-color/browser/index.js","../node_modules/@tsparticles/plugin-hsl-color/browser/index.js","../node_modules/@tsparticles/plugin-rgb-color/browser/index.js","../node_modules/@tsparticles/move-base/browser/index.js","../node_modules/@tsparticles/shape-circle/browser/index.js","../node_modules/@tsparticles/updater-color/browser/index.js","../node_modules/@tsparticles/updater-opacity/browser/index.js","../node_modules/@tsparticles/updater-out-modes/browser/index.js","../node_modules/@tsparticles/updater-size/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","../node_modules/@tsparticles/shape-emoji/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","../node_modules/@tsparticles/shape-image/browser/Utils.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","../node_modules/@tsparticles/shape-image/browser/index.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","../node_modules/@tsparticles/updater-life/browser/Utils.js","../node_modules/@tsparticles/shape-line/browser/LineDrawer.js","../node_modules/@tsparticles/shape-line/browser/Utils.js","../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","../node_modules/@tsparticles/interaction-particles-links/browser/index.js","../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","../node_modules/@tsparticles/shape-square/browser/Utils.js","../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","../node_modules/@tsparticles/shape-star/browser/Utils.js","../node_modules/@tsparticles/shape-star/browser/StarDrawer.js","../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","../node_modules/@tsparticles/slim/browser/index.js","../node_modules/@tsparticles/move-parallax/browser/index.js","../node_modules/@tsparticles/interaction-external-attract/browser/index.js","../node_modules/@tsparticles/interaction-external-bounce/browser/index.js","../node_modules/@tsparticles/interaction-external-bubble/browser/index.js","../node_modules/@tsparticles/interaction-external-connect/browser/index.js","../node_modules/@tsparticles/interaction-external-grab/browser/index.js","../node_modules/@tsparticles/interaction-external-pause/browser/index.js","../node_modules/@tsparticles/interaction-external-push/browser/index.js","../node_modules/@tsparticles/interaction-external-remove/browser/index.js","../node_modules/@tsparticles/interaction-external-repulse/browser/index.js","../node_modules/@tsparticles/interaction-external-slow/browser/index.js","../node_modules/@tsparticles/interaction-particles-attract/browser/index.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","../node_modules/@tsparticles/plugin-easing-quad/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/index.js","../node_modules/@tsparticles/shape-line/browser/index.js","../node_modules/@tsparticles/shape-square/browser/index.js","../node_modules/@tsparticles/shape-star/browser/index.js","../node_modules/@tsparticles/updater-life/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/index.js","../node_modules/@tsparticles/updater-stroke-color/browser/index.js","../node_modules/@tsparticles/shape-text/browser/Utils.js","../node_modules/@tsparticles/shape-text/browser/TextDrawer.js","../node_modules/@tsparticles/updater-tilt/browser/TiltDirection.js","../node_modules/@tsparticles/updater-tilt/browser/Options/Classes/TiltAnimation.js","../node_modules/@tsparticles/updater-tilt/browser/Options/Classes/Tilt.js","../node_modules/@tsparticles/updater-tilt/browser/TiltUpdater.js","../node_modules/@tsparticles/updater-twinkle/browser/Options/Classes/TwinkleValues.js","../node_modules/@tsparticles/updater-twinkle/browser/Options/Classes/Twinkle.js","../node_modules/@tsparticles/updater-twinkle/browser/TwinkleUpdater.js","../node_modules/@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js","../node_modules/@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js","../node_modules/@tsparticles/updater-wobble/browser/Utils.js","../node_modules/@tsparticles/updater-wobble/browser/WobbleUpdater.js","../node_modules/tsparticles/browser/index.js","../node_modules/@tsparticles/updater-destroy/browser/index.js","../node_modules/@tsparticles/updater-roll/browser/index.js","../node_modules/@tsparticles/updater-tilt/browser/index.js","../node_modules/@tsparticles/updater-twinkle/browser/index.js","../node_modules/@tsparticles/updater-wobble/browser/index.js","../node_modules/@tsparticles/shape-text/browser/index.js","../node_modules/@tsparticles/interaction-external-trail/browser/index.js","../node_modules/@tsparticles/plugin-absorbers/browser/index.js","../node_modules/@tsparticles/plugin-emitters/browser/index.js","../node_modules/@tsparticles/plugin-emitters-shape-circle/browser/index.js","../node_modules/@tsparticles/plugin-emitters-shape-square/browser/index.js","../node_modules/@tsparticles/react/dist/Particles.js","../node_modules/@tsparticles/react/dist/index.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js","../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../node_modules/@tsparticles/engine/browser/Core/Engine.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../node_modules/@tsparticles/engine/browser/index.js","../node_modules/@tsparticles/engine/browser/init.js"],"sourcesContent":["export var AbsorberClickMode;\n(function (AbsorberClickMode) {\n    AbsorberClickMode[\"absorber\"] = \"absorber\";\n})(AbsorberClickMode || (AbsorberClickMode = {}));\n","import { isNull } from \"@tsparticles/engine\";\nexport class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNull, isNumber } from \"@tsparticles/engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit.js\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { AbsorberSize } from \"./AbsorberSize.js\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { RotateDirection, Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, originPoint, percentDenominator, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nconst squareExp = 2, absorbFactor = 0.033, minOrbitLength = 0, minRadius = 0, minMass = 0, minAngle = 0, double = 2, maxAngle = Math.PI * double, minVelocity = 0;\nexport class AbsorberInstance {\n    constructor(absorbers, container, engine, options, position) {\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this._container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this._container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.origin;\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * maxAngle;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height), offset = 1, randomOffset = 0.1, randomFactor = 0.2;\n                    particle.absorberOrbit.length = minSize * (offset + (getRandom() * randomFactor - randomOffset));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise;\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === RotateDirection.clockwise ? Math.cos : Math.sin,\n                    y: orbitDirection === RotateDirection.clockwise ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? minVelocity) * container.retina.pixelRatio) / percentDenominator) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this._absorbers = absorbers;\n        this._container = container;\n        this._engine = engine;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this._engine, this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this._container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, squareExp)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * absorbFactor * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < minOrbitLength)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= minRadius || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= minMass || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(originPoint.x, originPoint.y, this.size, minAngle, maxAngle, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this._container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { AbsorberClickMode } from \"./Enums/AbsorberClickMode.js\";\nimport { AbsorberInstance } from \"./AbsorberInstance.js\";\nconst defaultIndex = 0;\nexport class Absorbers {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addAbsorber = async (options, position) => this.addAbsorber(options, position);\n    }\n    async addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this._container, this._engine, options, position);\n        this.array.push(absorber);\n        return Promise.resolve(absorber);\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === AbsorberClickMode.absorber) {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this._container.interactivity.mouse.clickPosition;\n            void this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this._container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this._container.actualOptions.interactivity.modes.absorbers;\n        const promises = executeOnSingleOrMultiple(this.absorbers, async (absorber) => {\n            await this.addAbsorber(absorber);\n        });\n        if (promises instanceof Array) {\n            await Promise.all(promises);\n        }\n        else {\n            await promises;\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber), deleteCount = 1;\n        if (index >= defaultIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nimport { AbsorberClickMode } from \"./Enums/AbsorberClickMode.js\";\nimport { Absorbers } from \"./Absorbers.js\";\nexport class AbsorbersPlugin {\n    constructor(engine) {\n        this.id = \"absorbers\";\n        this._engine = engine;\n    }\n    async getPlugin(container) {\n        return Promise.resolve(new Absorbers(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, absorber => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, absorber => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","export var DestroyMode;\n(function (DestroyMode) {\n    DestroyMode[\"none\"] = \"none\";\n    DestroyMode[\"split\"] = \"split\";\n})(DestroyMode || (DestroyMode = {}));\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { SplitFactor } from \"./SplitFactor.js\";\nimport { SplitRate } from \"./SplitRate.js\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { DestroyBounds } from \"./DestroyBounds.js\";\nimport { DestroyMode } from \"../../Enums/DestroyMode.js\";\nimport { Split } from \"./Split.js\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = DestroyMode.none;\n        this.split = new Split();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { PixelMode, getRangeValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst defaultOffset = 0, minDestroySize = 0.5, defaultSplitCount = 0, increment = 1, unbreakableTime = 500, minSplitCount = 0;\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getRangeValue(splitOptions.factor.value), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? defaultOffset),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? defaultOffset),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? defaultOffset),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: PixelMode.precise,\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : defaultOffset, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < minDestroySize) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? defaultSplitCount) + increment;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, unbreakableTime);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= minSplitCount &&\n        (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getRangeValue(splitOptions.rate.value), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, percentDenominator, } from \"@tsparticles/engine\";\nimport { Destroy } from \"./Options/Classes/Destroy.js\";\nimport { DestroyMode } from \"./Enums/DestroyMode.js\";\nimport { split } from \"./Utils.js\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.container = container;\n        this.engine = engine;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / percentDenominator;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / percentDenominator;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / percentDenominator;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / percentDenominator;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === DestroyMode.split) {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class EmitterShapeReplace {\n    constructor() {\n        this.color = false;\n        this.opacity = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { deepExtend, isNull } from \"@tsparticles/engine\";\nimport { EmitterShapeReplace } from \"./EmitterShapeReplace.js\";\nexport class EmitterShape {\n    constructor() {\n        this.options = {};\n        this.replace = new EmitterShapeReplace();\n        this.type = \"square\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options ?? {});\n        }\n        this.replace.load(data.replace);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { PixelMode, isNull } from \"@tsparticles/engine\";\nexport class EmitterSize {\n    constructor() {\n        this.mode = PixelMode.percent;\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { EmitterLife } from \"./EmitterLife.js\";\nimport { EmitterRate } from \"./EmitterRate.js\";\nimport { EmitterShape } from \"./EmitterShape.js\";\nimport { EmitterSize } from \"./EmitterSize.js\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = new EmitterShape();\n        this.startCount = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        this.shape.load(data.shape);\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","export var EmitterClickMode;\n(function (EmitterClickMode) {\n    EmitterClickMode[\"emitter\"] = \"emitter\";\n})(EmitterClickMode || (EmitterClickMode = {}));\n","import { PixelMode, Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, millisecondsToSeconds, randomInRange, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize.js\";\nconst half = 0.5, defaultLifeDelay = 0, minLifeCount = 0, defaultSpawnDelay = 0, defaultEmitDelay = 0, defaultLifeCount = -1, defaultColorAnimationFactor = 1;\nfunction setParticlesOptionsColor(particlesOptions, color) {\n    if (particlesOptions.color) {\n        particlesOptions.color.value = color;\n    }\n    else {\n        particlesOptions.color = {\n            value: color,\n        };\n    }\n}\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._destroy = () => {\n            this._mutationObserver?.disconnect();\n            this._mutationObserver = undefined;\n            this._resizeObserver?.disconnect();\n            this._resizeObserver = undefined;\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined, minDuration = 0, minLifeCount = 0;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > minLifeCount || this._immortal) &&\n                duration !== undefined &&\n                duration > minDuration) {\n                this._duration = duration * millisecondsToSeconds;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue, factor = defaultColorAnimationFactor) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (delay * millisecondsToSeconds) / container.retina.reduceFactor, defaultColorSpeed = 0, colorSpeed = getRangeValue(animation.speed ?? defaultColorSpeed);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * factor) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay =\n            (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this._engine, this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._lifeCount = this.options.life.count ?? defaultLifeCount;\n        this._immortal = this._lifeCount <= minLifeCount;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                this._mutationObserver = new MutationObserver(() => {\n                    this.resize();\n                });\n                this._resizeObserver = new ResizeObserver(() => {\n                    this.resize();\n                });\n                this._mutationObserver.observe(element, {\n                    attributes: true,\n                    attributeFilter: [\"style\", \"width\", \"height\"],\n                });\n                this._resizeObserver.observe(element);\n            }\n        }\n        const shapeOptions = this.options.shape, shapeGenerator = this._engine.emitterShapeManager?.getShapeGenerator(shapeOptions.type);\n        if (shapeGenerator) {\n            this._shape = shapeGenerator.generate(this.position, this.size, this.fill, shapeOptions.options);\n        }\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    async init() {\n        await this._shape?.init();\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > minLifeCount || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? defaultSpawnDelay)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > minLifeCount || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._shape?.resize(this.position, this.size);\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? defaultSpawnDelay;\n            this._currentEmitDelay = this._emitDelay ?? defaultEmitDelay;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > minLifeCount || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._shape?.resize(this.position, this.size);\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                            this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    _calcPosition() {\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect(), pxRatio = this.container.retina.pixelRatio;\n                return {\n                    x: (elRect.x + elRect.width * half) * pxRatio,\n                    y: (elRect.y + elRect.height * half) * pxRatio,\n                };\n            }\n        }\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    _calcSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                    mode: PixelMode.precise,\n                };\n            }\n        }\n        return (this.options.size ??\n            (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: PixelMode.percent,\n                    width: 0,\n                });\n                return size;\n            })());\n    }\n    _emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this._emitParticles(quantity);\n    }\n    _emitParticles(quantity) {\n        const singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = this.options.spawnColor?.animation;\n                if (hslAnimation) {\n                    const maxValues = {\n                        h: 360,\n                        s: 100,\n                        l: 100,\n                    }, colorFactor = 3.6;\n                    this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, maxValues.h, colorFactor);\n                    this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, maxValues.s);\n                    this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, maxValues.l);\n                }\n                setParticlesOptionsColor(particlesOptions, this.spawnColor);\n            }\n            const shapeOptions = this.options.shape;\n            let position = this.position;\n            if (this._shape) {\n                const shapePosData = this._shape.randomPosition();\n                if (shapePosData) {\n                    position = shapePosData.position;\n                    const replaceData = shapeOptions.replace;\n                    if (replaceData.color && shapePosData.color) {\n                        setParticlesOptionsColor(particlesOptions, shapePosData.color);\n                    }\n                    if (replaceData.opacity) {\n                        if (particlesOptions.opacity) {\n                            particlesOptions.opacity.value = shapePosData.opacity;\n                        }\n                        else {\n                            particlesOptions.opacity = {\n                                value: shapePosData.opacity,\n                            };\n                        }\n                    }\n                }\n                else {\n                    position = null;\n                }\n            }\n            if (position) {\n                this.container.particles.addParticle(position, particlesOptions);\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { EmitterInstance } from \"./EmitterInstance.js\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        const defaultIndex = 0;\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addEmitter = async (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    async addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        await emitter.init();\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== EmitterClickMode.emitter) {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            const minLength = 0;\n            if (modeEmitters.value.length > minLength && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        void executeOnSingleOrMultiple(emittersOptions, async (emitter) => {\n            await this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                await this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            await this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter), minIndex = 0, deleteCount = 1;\n        if (index >= minIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { Emitters } from \"./Emitters.js\";\nexport class EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new Emitters(this._engine, container));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, emitter => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map(s => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    const defaultCount = 1;\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map(s => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(EmitterClickMode.emitter, options.interactivity.events.onClick.mode)));\n    }\n}\n","const shapeGeneratorss = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShapeGenerator(name, generator) {\n        if (!this.getShapeGenerator(name)) {\n            shapeGeneratorss.set(name, generator);\n        }\n    }\n    getShapeGenerator(name) {\n        return shapeGeneratorss.get(name);\n    }\n    getSupportedShapeGenerators() {\n        return shapeGeneratorss.keys();\n    }\n}\n","export class EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        this.position = position;\n        this.size = size;\n        this.fill = fill;\n        this.options = options;\n    }\n    resize(position, size) {\n        this.position = position;\n        this.size = size;\n    }\n}\n","import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom } from \"@tsparticles/engine\";\nconst quarter = 0.25, double = 2, doublePI = Math.PI * double, squareExp = 2, half = 0.5;\nexport class EmittersCircleShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const size = this.size, fill = this.fill, position = this.position, generateTheta = (x, y) => {\n            const u = getRandom() * quarter, theta = Math.atan((y / x) * Math.tan(doublePI * u)), v = getRandom();\n            if (v < quarter) {\n                return theta;\n            }\n            else if (v < double * quarter) {\n                return Math.PI - theta;\n            }\n            else if (v < double * quarter + quarter) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** squareExp + (x * Math.sin(theta)) ** squareExp), [a, b] = [size.width * half, size.height * half], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            position: {\n                x: position.x + randomRadius * Math.cos(randomTheta),\n                y: position.y + randomRadius * Math.sin(randomTheta),\n            },\n        };\n    }\n}\n","import { EmittersCircleShape } from \"./EmittersCircleShape.js\";\nexport class EmittersCircleShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersCircleShape(position, size, fill, options);\n    }\n}\n","import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { double, getRandom, half } from \"@tsparticles/engine\";\nconst sides = 4;\nvar Sides;\n(function (Sides) {\n    Sides[Sides[\"TopLeft\"] = 0] = \"TopLeft\";\n    Sides[Sides[\"TopRight\"] = 1] = \"TopRight\";\n    Sides[Sides[\"BottomRight\"] = 2] = \"BottomRight\";\n    Sides[Sides[\"BottomLeft\"] = 3] = \"BottomLeft\";\n})(Sides || (Sides = {}));\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - half);\n}\nexport class EmittersSquareShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const fill = this.fill, position = this.position, size = this.size;\n        if (fill) {\n            return {\n                position: {\n                    x: randomSquareCoordinate(position.x, size.width),\n                    y: randomSquareCoordinate(position.y, size.height),\n                },\n            };\n        }\n        else {\n            const halfW = size.width * half, halfH = size.height * half, side = Math.floor(getRandom() * sides), v = (getRandom() - half) * double;\n            switch (side) {\n                case Sides.TopLeft:\n                    return {\n                        position: {\n                            x: position.x + v * halfW,\n                            y: position.y - halfH,\n                        },\n                    };\n                case Sides.TopRight:\n                    return {\n                        position: {\n                            x: position.x - halfW,\n                            y: position.y + v * halfH,\n                        },\n                    };\n                case Sides.BottomRight:\n                    return {\n                        position: {\n                            x: position.x + v * halfW,\n                            y: position.y + halfH,\n                        },\n                    };\n                case Sides.BottomLeft:\n                default:\n                    return {\n                        position: {\n                            x: position.x + halfW,\n                            y: position.y + v * halfH,\n                        },\n                    };\n            }\n        }\n    }\n}\n","import { EmittersSquareShape } from \"./EmittersSquareShape.js\";\nexport class EmittersSquareShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersSquareShape(position, size, fill, options);\n    }\n}\n","import { deepExtend, isNull, } from \"@tsparticles/engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Trail } from \"./Options/Classes/Trail.js\";\nconst trailMode = \"trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(trailMode, events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(trailMode, events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","export var RollMode;\n(function (RollMode) {\n    RollMode[\"both\"] = \"both\";\n    RollMode[\"horizontal\"] = \"horizontal\";\n    RollMode[\"vertical\"] = \"vertical\";\n})(RollMode || (RollMode = {}));\n","import { AlterType, getRandom, getRangeValue, half, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { RollMode } from \"./RollMode.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport function initParticle(engine, particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === RollMode.horizontal || rollOpt.mode === RollMode.both,\n        vertical: rollOpt.mode === RollMode.vertical || rollOpt.mode === RollMode.both,\n        angle: getRandom() * doublePI,\n        speed: getRangeValue(rollOpt.speed) / maxAngle,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(engine, rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= half ? AlterType.darken : AlterType.enlighten;\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: AlterType.darken,\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: AlterType.enlighten,\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = doublePI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { RollLight } from \"./RollLight.js\";\nimport { RollMode } from \"../../RollMode.js\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = RollMode.vertical;\n        this.speed = 25;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils.js\";\nimport { Roll } from \"./Options/Classes/Roll.js\";\nexport class RollUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(this._engine, particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n","export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n","import { itemFromSingleOrMultiple } from \"@tsparticles/engine\";\nconst double = 2, half = 0.5;\nexport function drawText(data) {\n    const { context, particle, radius, opacity } = data, character = particle.shapeData;\n    if (!character) {\n        return;\n    }\n    const textData = character.value;\n    if (textData === undefined) {\n        return;\n    }\n    if (particle.text === undefined) {\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n    const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * double, font = character.font ?? \"Verdana\", fill = particle.shapeFill;\n    const lines = text?.split(\"\\n\");\n    if (!lines) {\n        return;\n    }\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    context.globalAlpha = opacity;\n    for (let i = 0; i < lines.length; i++) {\n        drawLine(context, lines[i], radius, opacity, i, fill);\n    }\n    context.globalAlpha = 1;\n}\nfunction drawLine(context, line, radius, opacity, index, fill) {\n    const offsetX = line.length * radius * half, pos = {\n        x: -offsetX,\n        y: radius * half,\n    }, diameter = radius * double;\n    if (fill) {\n        context.fillText(line, pos.x, pos.y + diameter * index);\n    }\n    else {\n        context.strokeText(line, pos.x, pos.y + diameter * index);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawText } from \"./Utils.js\";\nexport class TextDrawer {\n    constructor() {\n        this.validTypes = [\"text\", \"character\", \"char\", \"multiline-text\"];\n    }\n    draw(data) {\n        drawText(data);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map(t => options.particles.shape.options[t])\n                .find(t => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !this.validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","export var TiltDirection;\n(function (TiltDirection) {\n    TiltDirection[\"clockwise\"] = \"clockwise\";\n    TiltDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    TiltDirection[\"random\"] = \"random\";\n})(TiltDirection || (TiltDirection = {}));\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nimport { TiltDirection } from \"../../TiltDirection.js\";\nimport { TiltAnimation } from \"./TiltAnimation.js\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = TiltDirection.clockwise;\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, degToRad, getRandom, getRangeValue, half, updateAnimation, } from \"@tsparticles/engine\";\nimport { Tilt } from \"./Options/Classes/Tilt.js\";\nimport { TiltDirection } from \"./TiltDirection.js\";\nconst identity = 1, double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: degToRad(getRangeValue(tiltOptions.value)),\n            sinDirection: getRandom() >= half ? identity : -identity,\n            cosDirection: getRandom() >= half ? identity : -identity,\n            min: 0,\n            max: doublePI,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === TiltDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            tiltDirection = index > minIndex ? TiltDirection.counterClockwise : TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = AnimationStatus.decreasing;\n                break;\n            case TiltDirection.clockwise:\n                particle.tilt.status = AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = identity - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity =\n                (getRangeValue(tiltAnimation.speed) / maxAngle) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.tilt) {\n            return;\n        }\n        updateAnimation(particle, particle.tilt, false, DestroyType.none, delta);\n        await Promise.resolve();\n    }\n}\n","import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { TwinkleValues } from \"./TwinkleValues.js\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle.js\";\nexport class TwinkleUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOffset = 1, zOpacityFactor = (zOffset - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(this._engine, twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    async init() {\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    async update() {\n        await Promise.resolve();\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNull, isNumber, setRangeValue, } from \"@tsparticles/engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed.js\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { millisecondsToSeconds } from \"@tsparticles/engine\";\nconst defaultDistance = 0, double = 2, doublePI = Math.PI * double, distanceFactor = 60;\nexport function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? defaultDistance) * delta.factor)) /\n        (millisecondsToSeconds / distanceFactor), max = doublePI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { getRandom, getRangeValue, } from \"@tsparticles/engine\";\nimport { Wobble } from \"./Options/Classes/Wobble.js\";\nimport { updateWobble } from \"./Utils.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360, moveSpeedFactor = 10, defaultDistance = 0;\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * doublePI,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / maxAngle,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / moveSpeedFactor,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance =\n            getRangeValue(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { loadAbsorbersPlugin } from \"@tsparticles/plugin-absorbers\";\nimport { loadDestroyUpdater } from \"@tsparticles/updater-destroy\";\nimport { loadEmittersPlugin } from \"@tsparticles/plugin-emitters\";\nimport { loadEmittersShapeCircle } from \"@tsparticles/plugin-emitters-shape-circle\";\nimport { loadEmittersShapeSquare } from \"@tsparticles/plugin-emitters-shape-square\";\nimport { loadExternalTrailInteraction } from \"@tsparticles/interaction-external-trail\";\nimport { loadRollUpdater } from \"@tsparticles/updater-roll\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { loadTextShape } from \"@tsparticles/shape-text\";\nimport { loadTiltUpdater } from \"@tsparticles/updater-tilt\";\nimport { loadTwinkleUpdater } from \"@tsparticles/updater-twinkle\";\nimport { loadWobbleUpdater } from \"@tsparticles/updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadTextShape(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadEmittersShapeCircle(engine, false);\n    await loadEmittersShapeSquare(engine, false);\n    await loadSlim(engine, refresh);\n}\n","import { DestroyUpdater } from \"./DestroyUpdater.js\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"destroy\", container => {\n        return Promise.resolve(new DestroyUpdater(engine, container));\n    }, refresh);\n}\n","import { RollUpdater } from \"./RollUpdater.js\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"roll\", () => {\n        return Promise.resolve(new RollUpdater(engine));\n    }, refresh);\n}\n","import { TiltUpdater } from \"./TiltUpdater.js\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"tilt\", container => {\n        return Promise.resolve(new TiltUpdater(container));\n    }, refresh);\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater.js\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"twinkle\", () => {\n        return Promise.resolve(new TwinkleUpdater(engine));\n    }, refresh);\n}\n","import { WobbleUpdater } from \"./WobbleUpdater.js\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"wobble\", container => {\n        return Promise.resolve(new WobbleUpdater(container));\n    }, refresh);\n}\n","import { TextDrawer } from \"./TextDrawer.js\";\nexport async function loadTextShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TextDrawer(), refresh);\n}\n","import { TrailMaker } from \"./TrailMaker.js\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalTrail\", container => {\n        return Promise.resolve(new TrailMaker(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Trail.js\";\nexport * from \"./Options/Interfaces/ITrail.js\";\n","import { AbsorbersPlugin } from \"./AbsorbersPlugin.js\";\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new AbsorbersPlugin(engine), refresh);\n}\nexport * from \"./AbsorberContainer.js\";\nexport * from \"./Enums/AbsorberClickMode.js\";\n","import { EmittersPlugin } from \"./EmittersPlugin.js\";\nimport { ShapeManager } from \"./ShapeManager.js\";\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShapeGenerator) {\n        engine.addEmitterShapeGenerator = (name, generator) => {\n            engine.emitterShapeManager?.addShapeGenerator(name, generator);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\nexport * from \"./EmitterContainer.js\";\nexport * from \"./EmitterShapeBase.js\";\nexport * from \"./EmittersEngine.js\";\nexport * from \"./IEmitterShape.js\";\nexport * from \"./IEmitterShapeGenerator.js\";\nexport * from \"./Enums/EmitterClickMode.js\";\nexport * from \"./IRandomPositionData.js\";\n","import { EmittersCircleShapeGenerator } from \"./EmittersCircleShapeGenerator.js\";\nexport async function loadEmittersShapeCircle(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"circle\", new EmittersCircleShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n","import { EmittersSquareShapeGenerator } from \"./EmittersSquareShapeGenerator.js\";\nexport async function loadEmittersShapeSquare(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"square\", new EmittersSquareShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n"],"names":["AbsorberClickMode","AbsorberSizeLimit","constructor","this","radius","mass","load","data","isNull","undefined","AbsorberSize","ValueWithRandom","super","density","value","limit","isNumber","Absorber","color","OptionsColor","draggable","opacity","destroy","orbits","size","create","name","position","x","setRangeValue","y","maxAngle","Math","PI","AbsorberInstance","absorbers","container","engine","options","_rangeColorToRgb","_this$initialPosition","_this$initialPosition2","_calcPosition","exactPosition","calcPositionOrRandomFromSizeRanged","_container","canvas","Vector","_updateParticlePosition","particle","v","destroyed","canvasSize","needsNewPosition","newPosition","calcPositionOrRandomFromSize","setTo","velocity","initialVelocity","absorberOrbit","_particle$retina$move","origin","length","getDistance","getPosition","angle","getRandom","minSize","min","width","height","offset","randomOffset","randomFactor","absorberOrbitDirection","RotateDirection","clockwise","counterClockwise","orbitRadius","orbitAngle","orbitDirection","updateFunc","cos","sin","retina","moveSpeed","pixelRatio","percentDenominator","reduceFactor","addV","addTo","_absorbers","_engine","initialPosition","dragging","getRangeValue","rangeColorToRgb","b","g","r","copy","attract","mouse","interactivity","clicking","downPosition","pos","dx","dy","distance","getDistances","pow","getRadius","sizeFactor","draw","context","translate","beginPath","arc","originPoint","closePath","fillStyle","getStyleFromRgb","fill","resize","isPointInside","Absorbers","array","interactivityAbsorbers","getAbsorber","idxOrName","find","t","addAbsorber","async","absorber","push","Promise","resolve","handleClickMode","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","itemFromSingleOrMultiple","absorbersOptions","aPosition","clickPosition","init","actualOptions","modes","promises","executeOnSingleOrMultiple","Array","all","particleUpdate","removeAbsorber","index","indexOf","splice","stop","AbsorbersPlugin","id","getPlugin","loadOptions","source","_source$interactivity","needsPlugin","tmp","_options$interactivit","isArray","events","onClick","isInArray","DestroyBounds","bottom","left","right","top","DestroyMode","SplitFactor","SplitRate","max","Split","count","factor","rate","sizeOffset","_this$colorOffset","particles","deepExtend","colorOffset","h","s","l","Destroy","bounds","none","split","addSplitParticle","parent","splitParticlesOptions","destroyOptions","splitOptions","loadParticlesOptions","parentColor","getFillColor","_splitOptions$colorOf","_splitOptions$colorOf2","_splitOptions$colorOf3","hsl","move","center","PixelMode","precise","randomInRange","addParticle","group","_parent$splitCount","splitCount","unbreakable","setTimeout","DestroyUpdater","destroyBoundsOptions","destroyBounds","isEnabled","_len","arguments","sources","_key","particleDestroyed","override","particlesSplitOptions","i","update","EmitterLife","wait","delay","duration","EmitterRate","quantity","EmitterShapeReplace","EmitterShape","replace","type","_data$options","EmitterSize","percent","Emitter","autoPlay","life","shape","startCount","direction","domId","spawnColor","AnimatableColor","EmitterClickMode","setParticlesOptionsColor","particlesOptions","EmitterInstance","emitters","_this$options$life$de","_this$_initialPositio","_particlesOptions","_particlesOptions$mov","_particlesOptions$mov2","_particlesOptions$mov3","_this$options$life$co","_this$_engine$emitter","_this","_destroy","_this$_mutationObserv","_this$_resizeObserver","_mutationObserver","disconnect","_resizeObserver","removeEmitter","dispatchEvent","emitter","_prepareToDie","_this$options$life","_paused","_lifeCount","_immortal","_duration","millisecondsToSeconds","_setColorAnimation","animation","initValue","maxValue","_animation$speed","enable","emitFactor","speed","fpsLimit","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_firstSpawn","_startParticlesAdded","rangeColorToHsl","_size","_calcSize","getSize","element","document","getElementById","MutationObserver","ResizeObserver","observe","attributes","attributeFilter","shapeOptions","shapeGenerator","emitterShapeManager","getShapeGenerator","_shape","generate","play","externalPause","pause","externalPlay","_this$_shape","_emitDelay","_this$_spawnDelay","_this$_shape2","delta","_this$_spawnDelay2","_this$_emitDelay","_emitParticles","_this$_shape3","_this$options$life$de2","_emit","elRect","getBoundingClientRect","pxRatio","_this$options$size","singleParticlesOptions","_this$options$spawnCo","hslAnimation","maxValues","colorFactor","shapePosData","randomPosition","replaceData","Emitters","interactivityEmitters","random","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","modeEmitters","emittersModeOptions","minLength","usedIndexes","idx","arrayRandomIndex","includes","itemFromArray","emittersOptions","ePosition","EmittersPlugin","map","emitterMode","defaultCount","_emitterMode$random$c","_emitterMode$random$e","_emitterMode$random$c2","_emitterMode$random$e2","shapeGeneratorss","Map","ShapeManager","addShapeGenerator","generator","set","get","getSupportedShapeGenerators","keys","EmitterShapeBase","quarter","doublePI","EmittersCircleShape","a","randomTheta","generateTheta","u","theta","atan","tan","double","maxRadius","sqrt","randomRadius","EmittersCircleShapeGenerator","Sides","randomSquareCoordinate","half","EmittersSquareShape","halfW","halfH","side","floor","TopLeft","TopRight","BottomRight","BottomLeft","EmittersSquareShapeGenerator","Trail","pauseOnStop","trailMode","TrailMaker","ExternalInteractorBase","_delay","clear","interact","_interactivity$mouse$","_this$_lastPosition","_interactivity$mouse$2","_this$_lastPosition2","trailOptions","trail","optDelay","canEmit","_lastPosition","mousePos","_objectSpread","_particle$interactivi","inside","onHover","loadModeOptions","reset","RollMode","RollLight","Roll","darken","enlighten","vertical","backColor","RollUpdater","getTransformValues","_particle$roll","roll","rollHorizontal","horizontal","rollVertical","d","rollOpt","both","alterType","AlterType","alter","initParticle","spawning","updateRoll","moveOptions","maxSpeed","moveDrift","_particle$pathGenerat","pathOptions","path","lastPathTime","pathDelay","pathGenerator","clamp","applyPath","gravityOptions","gravity","gravityFactor","inverse","acceleration","decay","moveDecay","multTo","mult","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","vibrate","BaseMover","_spinOptions$position","spinOptions","spin","spinPos","spinCenter","spinAcceleration","initSpin","_particle$retina","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","drift","slowFactor","slow","inRange","getProximitySpeedFactor","baseSpeed","maxSize","getRangeMax","spinClockwise","maxCanvasSize","halfMaxSize","_ref","_ref2","dxFixed","abs","dyFixed","maxDistance","hDistance","vDistance","hasVDistance","misplaced","vel","applyDistance","CircleDrawer","validTypes","circleRange","drawCircle","getSidesCount","particleInit","_shapeData$angle","shapeData","isObject","degToRad","ColorUpdater","hslColor","reduceDuplicates","getHslAnimationFromHsl","hAnimation","sAnimation","lAnimation","updateColor","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","key","stringPrefix","handleColor","_parseString","handleRangeColor","parseString","input","hexColor","startsWith","hexFixed","_","result","exec","parseInt","HslIndexes","HslColorManager","_colorValue$hsl","hslToRgb","_colorValue$hsl2","hslaToRgba","parseAlpha","OpacityUpdater","opacityOptions","initParticleNumericAnimationValue","opacityAnimation","sync","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","maxLoops","loops","time","updateAnimation","BounceOutMode","OutMode","bounce","outMode","handled","plugin","plugins","values","particleBounce","calculateBounds","OutModeDirection","bounced","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","outType","ParticleOutType","normal","outside","moveCenter","vx","vy","remove","NoneOutMode","pRadius","OutOutMode","out","circVec","newDx","newDy","atan2","warp","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","outModes","updaters","has","checkOutMode","default","_updateOutMode","updater","_outModes$bottom","_outModes$left","_outModes$right","_outModes$top","RgbColorManager","_colorValue$rgb","rgbColor","rgb","_colorValue$rgb2","SizeUpdater","sizeAnimation","_particle$retina$size","sizeAnimationSpeed","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","loadBasic","refresh","checkVersion","addColorManager","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","addMover","loadBaseMover","addShape","loadCircleShape","addParticleUpdater","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","ImageBitmap","close","delete","emojiDataKey","image","previousAlpha","globalAlpha","diameter","drawImage","drawEmoji","loadFont","font","particleDestroy","_shapeData$font","_shapeData$padding","emoji","randomIndexData","emojiOptions","padding","concat","fullSize","OffscreenCanvas","getContext","textBaseline","textAlign","fillText","transferToImageBitmap","createElement","processAttract","attractRadius","area","queryCb","attractOptions","query","quadTree","attractFactor","getEasing","easing","normVec","subFrom","Attract","EasingType","easeOutQuad","attractMode","Attractor","finish","attractModeDistance","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","hoverMode","clickEnabled","clickMode","enabledCb","Circle","p","hoverAttract","clickAttract","halfPI","processBounce","circleBounce","circleBounceDataFromParticle","Rectangle","rectBounce","divBounce","divs","bounceMode","divModeExecute","selector","div","bounceCb","querySelectorAll","forEach","item","elem","offsetLeft","offsetWidth","offsetTop","offsetHeight","tolerance","DivType","circle","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","onDiv","mouseBounce","isDivModeEnabled","BubbleBase","mix","sourceColor","BubbleDiv","selectors","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubble","bubbleModeDistance","queryCircle","_container$interactiv","_particle$opacity$val","_particle$opacity","durationEnd","distMouse","timeSpent","Date","getTime","clickTime","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","mouseLeaveEvent","divBubble","finalColor","modeColor","bubbleColor","pColor","rgbToHsl","colorMix","_divBubble$opacity","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","_data$particlesObj$va","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","contains","divMode","force","ConnectLinks","Connect","links","lineStyle","ctx","p1","p2","connectOptions","connect","gradStop","color1","color2","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","getStyleFromHsl","gradient","drawConnection","_p1$retina$linksWidth","ls","pos1","pos2","begin","end","drawLine","lineWidth","strokeStyle","stroke","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","blink","consent","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","optColor","grabLineColor","linksOptions","getLinkRandomColor","getLinkColor","Pauser","animationStatus","Push","groups","Pusher","pushOptions","groupOptions","Remove","Remover","removeNb","removeQuantity","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","_container$repulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","range","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","currentColorRegex","loadImage","loading","img","Image","addEventListener","error","getLogger","errorPrefix","src","downloadSvgImage","response","fetch","ok","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","increment","noData","DisposalMethod","GIFDataHeaders","defaultLoopCount","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","delayTime","transparencyIndex","ApplicationExtension","applicationExtension","identifier","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","backgroundColor","parseExtensionBlock","loadGifImage","_getGIFLoopAmount","gifData","gifURL","res","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","backgroundImage","Error","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","newValue","Replace","Infinity","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","_unused","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","images","_particle$gifFrame","offscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","clearRect","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","loadShape","then","_imageData$replaceCol","_imageData$fill","_imageData$close","_image$ratio","shapeFill","shapeClose","Preload","ImagePreloaderPlugin","preloadOptions","existing","extLength","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","addPlugin","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","justSpawned","widthRange","heightRange","updateLife","LineDrawer","_shapeData$cap","moveTo","lineTo","lineCap","cap","ParallaxMover","isSsr","parallax","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","smooth","centerDistance","ParticlesInteractorBase","attractDistance","rotate","ax","ay","p1Factor","p2Factor","updateAbsorb","r1","r2","collisions","absorb","fixBounceSpeed","collisionMaxSpeed","resolveCollision","CollisionMode","Collider","radius1","radius2","round","z","CircleWarp","point","intersects","rect","biggerCircle","rectSW","LinksShadow","blur","LinksTriangle","frequency","Links","shadow","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","_linkContainer","linkColor","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","some","destination","setLinkFrequency","dictionary","ids","sort","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","backgroundMask","params","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","globalCompositeOperation","composite","shadowColor","shadowBlur","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","p3","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","filter","linkFreq","_getLinkFrequency","findIndex","vertex","_getTriangleFrequency","_freqs","drawParticle","particleCreated","LinksPlugin","loadParticlesLinksInteraction","addInteractor","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","start","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","drawPolygon","getCenter","getSidesData","_polygon$sides","polygon","sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","pathRotation","rotateDirection","AnimationStatus","decreasing","increasing","rotateAnimation","rotation","isRotating","DestroyType","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","_particle$starInset","inset","starInset","drawStar","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeWidth","strokeOpacity","strokeAnimation","strokeHslColor","strokeColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","addEasing","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","line","strokeText","TextDrawer","_character$style","_character$weight","_character$font","character","textData","style","weight","drawText","TiltDirection","TiltAnimation","Tilt","TiltUpdater","_particle$tilt","tilt","cosDirection","c","sinDirection","_particle$options$til","tiltOptions","tiltDirection","tiltAnimation","_particle$options$til2","TwinkleValues","Twinkle","TwinkleUpdater","getColorStyles","twinkleOptions","twinkling","zOpacityFactor","opacityRate","twinklingOpacity","twinkleStyle","needsTwinkle","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","_wobbleOpt$distance","wobbleOpt","wobble","angleSpeed","wobbleDistance","_particle$options$wob","_particle$retina$wobb","wobbleOptions","updateWobble","loadFull","loadDestroyUpdater","loadRollUpdater","loadTiltUpdater","loadTwinkleUpdater","loadWobbleUpdater","loadTextShape","loadExternalTrailInteraction","loadAbsorbersPlugin","addEmitterShapeGenerator","_engine$emitterShapeM","loadEmittersPlugin","_emittersEngine$addEm","emittersEngine","call","loadEmittersShapeCircle","loadEmittersShapeSquare","f","_t$id","m","e","particlesLoaded","className","n","generatedAttribute","touchEndEvent","defaultTransform","randomColorValue","midColorValue","generatedTrue","generatedFalse","canvasTag","rgbMax","hMax","sMax","lMax","hMin","sMin","hPhase","threeQuarter","minVelocity","defaultOpacity","decayOffset","identity","lMin","rgbFactor","triple","sextuple","sNormalizedOffset","phaseNumerator","defaultRgbMin","defaultVelocity","defaultLoops","defaultTime","MoveDirection","isBoolean","arg","isString","Vector3d","xOrCoords","_updateFromAngle","coords3d","getLengthSq","clone","add","distanceTo","sub","distanceToSq","divTo","normalize","v3d","_random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","cancelAnimationFrame","Number","EPSILON","num","comp1","comp2","weight1","weight2","getRangeMin","pointA","pointB","degrees","collisionVelocity","v1","v2","m1","m2","_data$position$x","_data$position2","_data$position$y","_data$position3","_data$position4","_data$position5","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position6","_data$position$y2","_data$position7","endsWith","parseFloat","AnimationMode","StartValueType","_logger","debug","console","info","log","verbose","warning","warn","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","safeMatchMedia","matchMedia","fonts","areBoundsInside","_len2","_key2","sourceIsArray","destDict","findItemFromSingleOrMultiple","callback","singleDivModeExecute","matches","checkSelector","getMass","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","divBounds","bounceOptions","resH","resV","obj","useIndex","valueRange","animationOptions","increase","decrease","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","_objectWithoutProperties","_excluded","changeDirection","destroyType","_data$maxLoops","_data$loops","_data$maxLoops2","_data$velocity","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","checkDestroy","getFullScreenStyle","fn","cache","args","JSON","stringify","memoize","fullScreenStyle","margin","borderWidth","toString","setProperty","InteractivityDetect","EventType","ResponsiveMode","ThemeMode","LimitMode","InteractorType","RangeType","stringToRgba","manager","colorManagers","colorToRgb","getRandomRgbColor","stringToRgb","g1","b1","hNormalized","sNormalized","lNormalized","grayscaleValue","channel","temp1","temp2","temp3","phaseThird","red","green","blue","hsla","rgbResult","fixedMin","fixedMax","size1","size2","rgb1","rgb2","_p1$getFillColor","_p2$getFillColor","getStrokeColor","destColor","getHslFromAnimation","resColor","setColorAnimation","colorValue","colorAnimation","updateColorValue","ranges","dimension","_transform$a","_transform$b","_transform$b2","_transform$c","_transform$c2","_transform$d","_particle$strokeWidth","colorStyles","transform","rotateData","rotating","transformData","setTransform","shadowOffsetX","shadowOffsetY","drawData","drawer","shapeDrawers","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","_factor$key","setStyle","important","elementStyle","Set","Object","prototype","hasOwnProperty","getPropertyValue","removeProperty","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","_updater$afterDraw","_applyPreDrawUpdaters","zOpacity","_preDrawUpdaters","_updater$beforeDraw","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","_plugin$resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","coverRgb","coverColor","_coverColorStyle","reject","_coverImage","evt","_initStyle","_fullScreen","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","initBackground","Node","originalStyle","_originalStyle","fullScreen","_standardSize","stdSize","_context","_generated","paint","drawAsync","_particle$getStrokeCo","pfColor","psColor","_particle$bubble$opac","_particle$strokeOpaci","zStrokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","attributeName","initUpdaters","initPlugins","background","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_plugin$particleFillC","_updater$getColorStyl","loadCanvas","dataset","ariaHidden","clonedStyle","_style$getPropertyVal","_style$getPropertyPri","styleKey","styleValue","stylePriority","getPropertyPriority","_clonedStyle$setPrope2","_clonedStyle$setPrope","cloneStyle","standardSize","retinaSize","currentSize","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","loadTheme","_handleVisibilityChange","_document","pauseOnBlur","hidden","pageHidden","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","unobserve","entries","target","_mouseDown","_mouseTouchClick","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","Parallax","HoverEvent","ResizeEvent","Events","Modes","interactors","interactor","Interactivity","ManualParticle","_data$position$mode","Responsive","maxWidth","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","CollisionsAbsorb","CollisionsOverlap","retries","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","overlap","Effect","_this$options$effect","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","MovePath","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","straight","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","Shadow","Shape","_this$options$shape","SizeAnimation","Size","Stroke","ZIndex","ParticlesOptions","number","hasOwn","_this$groups$group","strokeToLoad","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","detectRetina","manualParticles","pauseOnOutsideViewport","responsive","zLayers","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","_interactor$handleCli","getInteractors","external","particlesInteract","fixOutMode","checkModes","coord","maxCoord","setCb","Particle","tryCount","pluginPos","particlePosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","backFactor","backSum","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","_shapeDrawer$particle","shapeDrawer","_plugin$particleDestr","_updater$particleDest","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","overrideOptions","_effectData$fill","_effectData$close","_shapeData$fill","_shapeData$close","_effectDrawer","_shapeDrawer","_shapeDrawer2","_effectDrawer2","_effectDrawer2$partic","_shapeDrawer3","_shapeDrawer3$particl","effectClose","effectFill","ignoresResizeRatio","mainOptions","effectType","shapeType","effectOptions","_overrideOptions$effe","_overrideOptions$shap","availableEffects","availableShapes","effectData","loadEffectData","loadShapeData","getPathGenerator","addPath","setLastZIndex","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","sideCountFunc","mover","movers","_mover$init","_plugin$particleCreat","isInsideCanvas","isVisible","_updater$reset","Point","BaseRange","distPos","rectangle","rectRange","w","w2","h2","QuadTree","capacity","_subdivide","fixedIndex","_subs","_divided","_points","insert","check","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","_options$number$densi","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","addManualParticles","_this$_groupLimits$ge","limitMode","currentCount","countToRemove","condition","_plugin$particlesInit","_plugin$particlesInit2","particlesInitialization","j","_groupOptions$number","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","deleted","_resizeFactor","particlesToDelete","_plugin$update","resizeFactor","_plugin$particleUpdat","checkDelete","zArray","Retina","devicePixelRatio","moveDistance","props","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_lifeTime","_firstStart","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","clearClickHandlers","_this$interactivity$e","_effectDrawer$destroy","_shapeDrawer$destroy","clearPlugins","mainArr","items","containerDestroyed","refreshTime","_drawAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","_drawer$init","_drawer$init2","_plugin$init","containerInit","_plugin$particlesSetu","particlesSetup","_currentTheme","handle","_plugin$pause","containerPaused","needsUpdate","containerPlay","HTMLElement","_plugin$start","containerStarted","_delayTimeout","_plugin$stop","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","version","addConfig","_config$key","configAdded","addEffect","interactorInitializer","moverInitializer","updaterInitializer","addPathGenerator","addPreset","validType","pluginVersion","dom","domItem","_this$easingFunctions","_params$id","_params$element","fallback","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","deleteCount","domContainer","getDomContainer","body","append","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","_plugin$loadOptions","_updater$loadOptions","setOnClickHandler","GradientType","tsParticles"],"sourceRoot":""}